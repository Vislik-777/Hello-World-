using System;
public class BankAccount
{
    private string owner;
    private double balance;
    public string Owner
    {
        get { return owner; }
        set { owner = value; }
    }
    public double Balance
    {
        get { return balance; }
        private set // Сделал сеттер приватным, чтобы баланс менялся только через методы Deposit и Withdraw
        {
            if (value >= 0)
            {
                balance = value;
            }
            else
            {
                Console.WriteLine("Баланс не может быть отрицательным!");
            }
        }
    }
    public BankAccount(string owner, double initialBalance)
    {
        Owner = owner;
        Balance = initialBalance;
    }
    public void Deposit(double amount)
    {
        if (amount > 0)
        {
            Balance += amount;
            Console.WriteLine($"{Owner}, баланс: {Balance}.");
        }
        else
        {
            Console.WriteLine("Сумма депозита должна быть положительной.");
        }
    }
    public void Withdraw(double amount)
    {
        if (amount > 0)
        {
            if (amount <= Balance)
            {
                Balance -= amount;
                Console.WriteLine($"{Owner}, баланс: {Balance}.");
            }
            else
            {
                Console.WriteLine("Недостаточно средств!");
                Console.WriteLine($"{Owner}, баланс: {Balance}."); // Вывод текущего баланса при попытке снятия большей суммы.
            }
        }
        else
        {
            Console.WriteLine("Сумма снятия должна быть положительной.");
        }
    }
    public static void Main(string[] args)
    {
        BankAccount account = new BankAccount("Данил", 8400); // Инициализация согласно вашим данным.
        account.Deposit(500);
        account.Withdraw(1000);
        account.Withdraw(10000); // попытка снять больше, чем есть на счету
    }
}
